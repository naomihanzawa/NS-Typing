{"ast":null,"code":"var _jsxFileName = \"/Users/naomi/Desktop/naomi-ns-typing/src/Questions.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from './Button.js';\nimport styled from 'styled-components';\n\nfunction Questions({\n  setBeginTime,\n  setScreen,\n  missCount,\n  onMissCount\n}) {\n  const [typingStrings, setTypingStrings] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  function handleClick() {\n    setScreen('start');\n  }\n\n  function goToResult() {\n    setScreen('result');\n  }\n\n  useEffect(() => {\n    let date = new Date();\n    setBeginTime(date);\n    let subjectsCandidate = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"!\", \"#\", \"$\", \"%\", \"'\", \"(\", \")\", \"=\", \"-\", \"~\", \",\", \".\", \"?\", \"<\", \">\", \"{\", \"}\", \";\", \":\", \"/\", \"_\", \"@\", \"*\"];\n    let subjects = subjectsCandidate[Math.floor(Math.random())]; //配列をランダムに並び替える\n\n    subjects = subjectsCandidate.map(function (a) {\n      return [a, Math.random()];\n    }).sort(function (a, b) {\n      return a[1] - b[1];\n    }).map(function (a) {\n      return a[0];\n    }).slice(0, 10);\n    setTypingStrings(subjects);\n    console.log(setBeginTime, \"setBeginTime\");\n  }, [setBeginTime]); // var select = document.getElementById(\"input\");\n  // select.selected = true\n  // console.log('handleKeyPress',e.key);\n\n  const handleKeyPress = e => {\n    const isTypeCorrect = e.key === typingStrings[currentIndex];\n\n    if (isTypeCorrect) {\n      const nextIndex = currentIndex + 1;\n      setCurrentIndex(nextIndex);\n\n      if (nextIndex >= 10) {\n        goToResult();\n      }\n    } else {\n      onMissCount(missCount + 1);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instruction\",\n    style: {\n      color: \"white\",\n      marginTop: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"\\u8868\\u793A\\u3055\\u308C\\u305F\\u6570\\u5B57\\u307E\\u305F\\u306F\\u8A18\\u53F7\\u306E\\u30AD\\u30FC\\u3092\\u62BC\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"), /*#__PURE__*/React.createElement(\"div\", {\n    onKeyPress: e => handleKeyPress(e),\n    tabIndex: 0,\n    \"data-testid\": \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Question, {\n    \"data-testid\": \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, typingStrings[currentIndex])), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-evenly\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    \"data-testid\": \"questionNo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, currentIndex + 1, \"\\u554F\\u76EE\"), /*#__PURE__*/React.createElement(Content, {\n    \"data-testid\": \"questionNo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"\\u30DF\\u30B9\\u30BF\\u30A4\\u30D7: \", missCount, \"\\u56DE\"), /*#__PURE__*/React.createElement(Button, {\n    text: \"\\u30BF\\u30A4\\u30C8\\u30EB\\u306B\\u623B\\u308B\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  })));\n}\n\nconst Content = styled.h1`\n    color: white;\n    font-size:120px;\n    font-weight:800;\n    margin:80px 0;\n}`;\nconst QuestionNo = styled.p`\n    color: white;\n    font-size:20px;\n    margin: 0;\n}`;\nexport default Questions;","map":{"version":3,"sources":["/Users/naomi/Desktop/naomi-ns-typing/src/Questions.js"],"names":["React","useState","useEffect","Button","styled","Questions","setBeginTime","setScreen","missCount","onMissCount","typingStrings","setTypingStrings","currentIndex","setCurrentIndex","handleClick","goToResult","date","Date","subjectsCandidate","subjects","Math","floor","random","map","a","sort","b","slice","console","log","handleKeyPress","e","isTypeCorrect","key","nextIndex","color","marginTop","display","justifyContent","Content","h1","QuestionNo","p"],"mappings":"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","sourcesContent":["import React,{useState, useEffect } from 'react';\nimport Button from './Button.js';\nimport styled from 'styled-components'\n\n\nfunction Questions({setBeginTime, setScreen, missCount, onMissCount}) {\n\n    const [typingStrings, setTypingStrings] = useState(\"\");\n    const [currentIndex, setCurrentIndex] = useState(0);\n   \n    function handleClick(){\n        setScreen('start');\n     }\n\n    function goToResult(){\n        setScreen('result');\n    }\n\n    useEffect(() => {\n\n        let date= new Date();\n        setBeginTime(date)\n     \n        let subjectsCandidate =\n        [\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"!\",\"#\",\"$\",\"%\",\"'\",\"(\",\")\",\n        \"=\",\"-\",\"~\",\",\",\".\",\"?\",\"<\",\">\",\"{\",\"}\",\";\",\":\",\"/\",\"_\",\"@\",\"*\"];\n        let subjects= subjectsCandidate[Math.floor(Math.random())]; \n\n        //配列をランダムに並び替える\n        subjects = subjectsCandidate.map(function(a){return [a, Math.random()]})\n        .sort(function(a, b){return a[1] - b[1]})\n        .map(function(a){return a[0]})\n        .slice(0,10)\n\n        setTypingStrings(subjects);\n\n        console.log(setBeginTime,\"setBeginTime\");\n\n    },[setBeginTime]);\n\n    // var select = document.getElementById(\"input\");\n    // select.selected = true\n\n    // console.log('handleKeyPress',e.key);\n    const handleKeyPress = (e) => {        \n        const isTypeCorrect = e.key === typingStrings[currentIndex]\n        if(isTypeCorrect){\n            const nextIndex = currentIndex +1\n            setCurrentIndex(nextIndex);\n\n            if(nextIndex >=10){\n                goToResult();\n            }\n        } else {\n            onMissCount(missCount + 1)\n        }\n    }\n\n    \n\n    return(\n            <div>\n                <p data-testid=\"instruction\" style={{color:\"white\", marginTop:\"50px\"}}>\n                    表示された数字または記号のキーを押してください\n                </p>\n                <div onKeyPress={(e) => handleKeyPress(e)} tabIndex={0} data-testid=\"input\">\n                    <Question data-testid=\"question\">{typingStrings[currentIndex]}</Question>\n                </div>\n                <div style={{display:\"flex\", justifyContent:\"space-evenly\"}}>\n                    <Content data-testid=\"questionNo\">{currentIndex +1}問目</Content>\n                    <Content data-testid=\"questionNo\">ミスタイプ: {missCount}回</Content>\n                    <Button text=\"タイトルに戻る\" onClick={handleClick}/>\n                </div>\n            </div>\n        );\n}\n\nconst Content = styled.h1`\n    color: white;\n    font-size:120px;\n    font-weight:800;\n    margin:80px 0;\n}`\n\n\nconst QuestionNo = styled.p`\n    color: white;\n    font-size:20px;\n    margin: 0;\n}`\n\n\nexport default Questions;\n"]},"metadata":{},"sourceType":"module"}